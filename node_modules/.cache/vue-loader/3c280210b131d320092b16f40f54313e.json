{"remainingRequest":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/pug-plain-loader/index.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andresgarciamacias/Documents/clothesTinder/src/layouts/sidebar.vue?vue&type=template&id=3ac3900d&lang=pug&","dependencies":[{"path":"/Users/andresgarciamacias/Documents/clothesTinder/src/layouts/sidebar.vue","mtime":1593439572800},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/pug-plain-loader/index.js","mtime":1521946589000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}