{"remainingRequest":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js??ref--13-2!/Users/andresgarciamacias/Documents/clothesTinder/src/store/list.ts","dependencies":[{"path":"/Users/andresgarciamacias/Documents/clothesTinder/src/store/list.ts","mtime":1595063674751},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/andresgarciamacias/Documents/clothesTinder/src/store/list.ts"],"names":[],"mappings":"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","sourcesContent":["import Axios from 'axios';\n\nexport default {\n  namespaced: true,\n\n  actions: {\n    async updateFilters(_, filters) {\n      console.log(filters);\n      await Axios.post(`${process.env.VUE_APP_ENDPOINT}/updateFilters`, {\n        filters\n      })\n    },\n\n    async historial(_, order) : Promise<Array<Object>> {\n      console.log('HISTORIAL', order);\n      try {\n        const { data } = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/historial/${order}`);\n        const clothes = data.map((card) => ({\n          name: card.name,\n          description: '',\n          price: card.price,\n          brand: card.brand,\n          pictures: [card.image],\n          url: card.url,\n          code: card.code,\n          srcsets: [card.srcset],\n        }));\n        console.log(clothes);\n        return clothes;\n      } catch (err) {\n        console.error(err);\n        return [];\n      }\n    },\n\n    async likes() : Promise<Array<Object>> {\n      console.log('LIKES');\n      try {\n        const { data } = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/likes`);\n        const clothes = data.map((card) => ({\n          name: card.name,\n          description: '',\n          price: card.price,\n          brand: card.brand,\n          pictures: [card.image],\n          url: card.url,\n          code: card.code,\n          srcsets: [card.srcset],\n        }));\n\n        return clothes;\n      } catch (err) {\n        console.error(err);\n        return [];\n      }\n    },\n\n    async dislikes() : Promise<Array<Object>> {\n      try {\n        const { data } = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/dislikes`);\n        const clothes = data.map((card) => ({\n          name: card.name,\n          description: '',\n          price: card.price,\n          brand: card.brand,\n          pictures: [card.image],\n          url: '',\n          code: card.code,\n          srcsets: [card.srcset],\n        }));\n\n        return clothes;\n      } catch (err) {\n        console.error(err);\n        return [];\n      }\n    },\n\n    async bought() : Promise<Array<Object>> {\n      try {\n        const { data } = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/bought`);\n        const clothes = data.map((card) => ({\n          name: card.name,\n          description: '',\n          price: card.price,\n          brand: card.brand,\n          pictures: [card.image],\n          url: '',\n          code: card.code,\n          srcsets: [card.srcset],\n        }));\n\n        return clothes;\n      } catch (err) {\n        console.error(err);\n        return [];\n      }\n    },\n\n    async favorites() : Promise<Array<Object>> {\n      try {\n        const { data } = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/favorites`);\n        const clothes = data.map((card) => ({\n          name: card.name,\n          description: '',\n          price: card.price,\n          brand: card.brand,\n          pictures: [card.image],\n          url: '',\n          code: card.code,\n          srcsets: [card.srcset],\n        }));\n\n        return clothes;\n      } catch (err) {\n        console.error(err);\n        return [];\n      }\n    },\n  },\n};\n"],"sourceRoot":""}]}