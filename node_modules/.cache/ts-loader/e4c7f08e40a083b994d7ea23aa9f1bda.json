{"remainingRequest":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/thread-loader/dist/cjs.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js??ref--13-3!/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","dependencies":[{"path":"/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","mtime":1596275596401},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2FuZHJlc2dhcmNpYW1hY2lhcy9Eb2N1bWVudHMvY2xvdGhlc1RpbmRlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBBeGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICB1c2VyOiB7fSwKICAgIGxvZ2dlZDogZmFsc2UKICB9LAogIG11dGF0aW9uczogewogICAgc2V0VG9rZW46IGZ1bmN0aW9uIHNldFRva2VuKF8sIHRva2VuKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ0b2tlbiIsIEpTT04uc3RyaW5naWZ5KHRva2VuKSk7CiAgICAgIEF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24gPSAiQmVhcmVyICIuY29uY2F0KHRva2VuKTsKICAgIH0sCiAgICBzZXRMb2dnZWQ6IGZ1bmN0aW9uIHNldExvZ2dlZChzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5sb2dnZWQgPSBkYXRhOwogICAgfSwKICAgIHNldFVzZXI6IGZ1bmN0aW9uIHNldFVzZXIoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudXNlciA9IGRhdGE7CiAgICB9LAogICAgc2V0RmlsdGVyczogZnVuY3Rpb24gc2V0RmlsdGVycyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS51c2VyLmZpbHRlcnMgPSBkYXRhOwogICAgfSwKICAgIHNldEdlbnJlOiBmdW5jdGlvbiBzZXRHZW5yZShzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS51c2VyLmdlbnJlID0gZGF0YTsKICAgIH0sCiAgICBzZXRDb3VudHJ5OiBmdW5jdGlvbiBzZXRDb3VudHJ5KF8sIGNvdW50cnkpIHsKICAgICAgY29uc29sZS5sb2coY291bnRyeSk7CiAgICAgIEF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkNvdW50cnkgPSBjb3VudHJ5OwogICAgfSwKICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcihzdGF0ZSkgewogICAgICBzdGF0ZS51c2VyID0ge307CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRUb2tlbjogZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKSA9PT0gInVuZGVmaW5lZCIpIHsKICAgICAgICAvLyBTaSBubyBoYXkgbmluZ8O6biB0b2tlbiBlbiBjYWNoZSBsbyBjcmVhbW9zIHZhY8OtbwogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ0b2tlbiIsIEpTT04uc3RyaW5naWZ5KCIiKSk7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldFVzZXI6IGZ1bmN0aW9uIGdldFVzZXIoX3JlZikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIF95aWVsZCRBeGlvcyRnZXQsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkdFVFRJTkcgVVNFUiIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBBeGlvcy5nZXQoIiIuY29uY2F0KHByb2Nlc3MuZW52LlZVRV9BUFBfRU5EUE9JTlQsICIvZ2V0TWUiKSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF95aWVsZCRBeGlvcyRnZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRBeGlvcyRnZXQuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRVc2VyIiwgZGF0YSk7CiAgICAgICAgICAgICAgICBjb21taXQoInNldExvZ2dlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTI7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRMb2dnZWQiLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTJdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNoZWNrTG9nZ2VkOiBmdW5jdGlvbiBjaGVja0xvZ2dlZChfcmVmMikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29tbWl0LCBnZXR0ZXJzLCBkaXNwYXRjaCwgdG9rZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwgZ2V0dGVycyA9IF9yZWYyLmdldHRlcnMsIGRpc3BhdGNoID0gX3JlZjIuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICB0b2tlbiA9IGdldHRlcnMuZ2V0VG9rZW47CgogICAgICAgICAgICAgICAgaWYgKCEodHlwZW9mIHRva2VuICE9PSAidW5kZWZpbmVkIikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAzOwogICAgICAgICAgICAgICAgLy8gSGFjZW1vcyBxdWUgQXhpb3MgbG8gaW5jbHV5YSBzaWVtcHJlIGVuIGVsIGhlYWRlciBkZSB0b2RhcyBsYXMgcGV0aWNpb25lcwogICAgICAgICAgICAgICAgQXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb24gPSB7CiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldFVzZXIiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgic3RhY2svZmV0Y2giLCB7fSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgaWYgKF9jb250ZXh0Mi5zZW50KSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbW1pdCgic3RhY2svdXBkYXRlQ2FyZHMiLCBbewogICAgICAgICAgICAgICAgICB0eXBlOiAid2VsY29tZSIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgdHlwZTogImxvZ2luIgogICAgICAgICAgICAgICAgfV0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiTGEgc2VzacOzbiBoYSBjYWR1Y2FkbyIsIF9jb250ZXh0Mi50MCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxOTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgY29tbWl0KCJzdGFjay91cGRhdGVDYXJkcyIsIFt7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICJsb2dpbiIKICAgICAgICAgICAgICAgIH1dLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1szLCAxMl1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjMpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgY29tbWl0KCJjbGVhciIpOwogICAgICAgICAgICAgICAgY29tbWl0KCJzdGFjay9jbGVhciIsIHt9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRUb2tlbiIsICIiKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0TG9nZ2VkIiwgZmFsc2UpOwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRVc2VyIiwge30pOwogICAgICAgICAgICAgICAgY29tbWl0KCJzdGFjay91cGRhdGVDYXJkcyIsIFt7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICJsb2dpbiIKICAgICAgICAgICAgICAgIH1dLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzaWduaW5Hb29nbGU6IGZ1bmN0aW9uIHNpZ25pbkdvb2dsZShfcmVmNCwgdG9rZW4pIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY0LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRUb2tlbiIsIHRva2VuKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgiZ2V0VXNlciIpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goInN0YWNrL2ZldGNoIiwge30sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHJlc3VsdCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ0LnQwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMSwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNpZ25pbjogZnVuY3Rpb24gc2lnbmluKF9yZWY1LCBfcmVmNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgZW1haWwsIHBhc3N3b3JkLCBfeWllbGQkQXhpb3MkcG9zdCwgZGF0YSwgcmVzdWx0OwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY1LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgZW1haWwgPSBfcmVmNi5lbWFpbCwgcGFzc3dvcmQgPSBfcmVmNi5wYXNzd29yZDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJTSUdOSU4iKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMzsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBBeGlvcy5wb3N0KCIiLmNvbmNhdChwcm9jZXNzLmVudi5WVUVfQVBQX0VORFBPSU5ULCAiL3NpZ25pbiIpLCB7CiAgICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIGF1dGg6IHsKICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogZW1haWwsCiAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBfeWllbGQkQXhpb3MkcG9zdCA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRBeGlvcyRwb3N0LmRhdGE7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0VG9rZW4iLCBkYXRhLmFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goImdldFVzZXIiKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goInN0YWNrL2ZldGNoIiwge30sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCByZXN1bHQpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAxODsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVsiY2F0Y2giXSgzKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NS50MCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1LCBudWxsLCBbWzMsIDE4XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzaWdudXA6IGZ1bmN0aW9uIHNpZ251cChfcmVmNywgX3JlZjgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIGVtYWlsLCBwYXNzd29yZCwgX3lpZWxkJEF4aW9zJHBvc3QyLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjcuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY3LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgZW1haWwgPSBfcmVmOC5lbWFpbCwgcGFzc3dvcmQgPSBfcmVmOC5wYXNzd29yZDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJTSUdOVVAiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBBeGlvcy5wb3N0KCIiLmNvbmNhdChwcm9jZXNzLmVudi5WVUVfQVBQX0VORFBPSU5ULCAiL3NpZ251cCIpLCB7CiAgICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3lpZWxkJEF4aW9zJHBvc3QyID0gX2NvbnRleHQ2LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJEF4aW9zJHBvc3QyLmRhdGE7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0VG9rZW4iLCBkYXRhLnRva2VuKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goImdldFVzZXIiKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJzdGFjay9mZXRjaFBvcHVsYXJzIiwge30sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICBfY29udGV4dDYucHJldiA9IDE2OwogICAgICAgICAgICAgICAgX2NvbnRleHQ2LnQwID0gX2NvbnRleHQ2WyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ2LnQwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTYsIG51bGwsIFtbMywgMTZdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import Axios from \"axios\";\n\nexport default {\n  namespaced: true,\n  state: {\n    user: {},\n    logged: false,\n  },\n\n  mutations: {\n    setToken(_, token): void {\n      localStorage.setItem(\"token\", JSON.stringify(token));\n      Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n\n    setLogged(state, data) {\n      state.logged = data;\n    },\n\n    setUser(state, data) {\n      state.user = data;\n    },\n\n    setFilters(state, data) {\n      state.user.filters = data;\n    },\n\n    setGenre(state, data) {\n      state.user.genre = data;\n    },\n\n    setCountry(_, country) {\n      console.log(country);\n      Axios.defaults.headers.common.Country = country;\n    },\n\n    clear(state) {\n      state.user = {};\n    },\n  },\n\n  getters: {\n    getToken(): string | null {\n      if (localStorage.getItem(\"token\") === \"undefined\") {\n        // Si no hay ningún token en cache lo creamos vacío\n        localStorage.setItem(\"token\", JSON.stringify(\"\"));\n        return null;\n      }\n\n      return JSON.parse(localStorage.getItem(\"token\"));\n    },\n  },\n\n  actions: {\n    async getUser({ commit }) {\n      console.log(\"GETTING USER\");\n      try {\n        let { data } = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/getMe`);\n        console.log(data);\n        commit(\"setUser\", data);\n        commit(\"setLogged\", true);\n      } catch (err) {\n        commit(\"setLogged\", false);\n        console.error(err);\n      }\n    },\n    async checkLogged({ commit, getters, dispatch }) {\n      const token = getters.getToken;\n      if (typeof token !== \"undefined\") {\n        try {\n          // Hacemos que Axios lo incluya siempre en el header de todas las peticiones\n          Axios.defaults.headers.common = {\n            Authorization: `Bearer ${token}`,\n          };\n          dispatch(\"getUser\");\n\n          if (!(await dispatch(\"stack/fetch\", {}, { root: true }))) {\n            commit(\n              \"stack/updateCards\",\n              [\n                {\n                  type: \"welcome\",\n                },\n                {\n                  type: \"login\",\n                },\n              ],\n              { root: true }\n            );\n          }\n        } catch (err) {\n          console.error(\"La sesión ha caducado\", err);\n          return false;\n        }\n      } else {\n        commit(\n          \"stack/updateCards\",\n          [\n            {\n              type: \"login\",\n            },\n          ],\n          { root: true }\n        );\n      }\n      return false;\n    },\n\n    async logout({ commit }) {\n      commit(\"clear\");\n      commit(\"stack/clear\", {}, { root: true });\n      commit(\"setToken\", \"\");\n      commit(\"setLogged\", false);\n      commit(\"setUser\", {});\n      commit(\n        \"stack/updateCards\",\n        [\n          {\n            type: \"login\",\n          },\n        ],\n        { root: true }\n      );\n    },\n    async signinGoogle({ commit, dispatch }, token): Promise<boolean> {\n      try {\n        commit(\"setToken\", token);\n        await dispatch(\"getUser\");\n        const result = await dispatch(\"stack/fetch\", {}, { root: true });\n        return result;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signin({ commit, dispatch }, { email, password }): Promise<boolean> {\n      console.log(\"SIGNIN\");\n\n      try {\n        const { data } = await Axios.post(\n          `${process.env.VUE_APP_ENDPOINT}/signin`,\n          {\n            email,\n            password,\n          },\n          {\n            auth: {\n              username: email,\n              password,\n            },\n          }\n        );\n\n        console.log(data.accessToken);\n        commit(\"setToken\", data.accessToken);\n        await dispatch(\"getUser\");\n        const result = await dispatch(\"stack/fetch\", {}, { root: true });\n        return result;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signup({ commit, dispatch }, { email, password }): Promise<boolean> {\n      console.log(\"SIGNUP\");\n\n      try {\n        const { data } = await Axios.post(\n          `${process.env.VUE_APP_ENDPOINT}/signup`,\n          {\n            email,\n            password,\n          }\n        );\n\n        console.log(data);\n        commit(\"setToken\", data.token);\n        await dispatch(\"getUser\");\n        dispatch(\"stack/fetchPopulars\", {}, { root: true });\n        return true;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n  },\n};\n"],"sourceRoot":""}]}