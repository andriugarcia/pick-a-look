{"remainingRequest":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js??ref--13-2!/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","dependencies":[{"path":"/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","mtime":1595345074043},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts"],"names":[],"mappings":";;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb,EAAA,UAAU,EAAE,IADC;AAEb,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE,EADD;AAEL,IAAA,MAAM,EAAE;AAFH,GAFM;AAOb,EAAA,SAAS,EAAE;AACT,IAAA,QADS,oBACA,CADA,EACG,KADH,EACQ;AACf,MAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA8B,IAAI,CAAC,SAAL,CAAe,KAAf,CAA9B;AACA,MAAA,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,MAAvB,CAA8B,aAA9B,oBAAwD,KAAxD;AACD,KAJQ;AAMT,IAAA,SANS,qBAMC,KAND,EAMQ,IANR,EAMY;AACnB,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACD,KARQ;AAUT,IAAA,OAVS,mBAUD,KAVC,EAUM,IAVN,EAUU;AACjB,MAAA,KAAK,CAAC,IAAN,GAAa,IAAb;AACD,KAZQ;AAcT,IAAA,UAdS,sBAcE,KAdF,EAcS,IAdT,EAca;AACpB,MAAA,KAAK,CAAC,IAAN,CAAW,OAAX,GAAqB,IAArB;AACD,KAhBQ;AAkBT,IAAA,QAlBS,oBAkBA,KAlBA,EAkBO,IAlBP,EAkBW;AAClB,MAAA,KAAK,CAAC,IAAN,CAAW,KAAX,GAAmB,IAAnB;AACD,KApBQ;AAsBT,IAAA,KAtBS,iBAsBH,KAtBG,EAsBE;AACT,MAAA,KAAK,CAAC,IAAN,GAAa,EAAb;AACD;AAxBQ,GAPE;AAkCb,EAAA,OAAO,EAAE;AACP,IAAA,QADO,sBACC;AACN,UAAI,YAAY,CAAC,OAAb,CAAqB,OAArB,MAAkC,WAAtC,EAAmD;AACjD;AACA,QAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA8B,IAAI,CAAC,SAAL,CAAe,EAAf,CAA9B;AACA,eAAO,IAAP;AACD;;AAED,aAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAX,CAAP;AACD;AATM,GAlCI;AA8Cb,EAAA,OAAO,EAAE;AACD,IAAA,OADC,yBACiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAR,gBAAA,MAAQ,QAAR,MAAQ;AACtB,gBAAA,OAAO,CAAC,GAAR,CAAY,cAAZ;AADsB;AAAA;AAAA,uBAGD,KAAK,CAAC,GAAN,WAAa,OAAO,CAAC,GAAR,CAAY,gBAAzB,YAHC;;AAAA;AAAA;AAGf,gBAAA,IAHe,oBAGf,IAHe;AAIpB,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,gBAAA,MAAM,CAAC,SAAD,EAAY,IAAZ,CAAN;AACA,gBAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AANoB;AAAA;;AAAA;AAAA;AAAA;AASpB,gBAAA,MAAM,CAAC,WAAD,EAAc,KAAd,CAAN;AACA,gBAAA,OAAO,CAAC,KAAR;;AAVoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYvB,KAbM;AAcD,IAAA,WAdC,8BAcwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B,gBAAA,MAA2B,SAA3B,MAA2B,EAAnB,OAAmB,SAAnB,OAAmB,EAAV,QAAU,SAAV,QAAU;AACvC,gBAAA,KADuC,GAC/B,OAAO,CAAC,QADuB;;AAAA,sBAEzC,OAAO,KAAP,KAAiB,WAFwB;AAAA;AAAA;AAAA;;AAAA;AAIzC;AACA,gBAAA,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,MAAvB,GAAgC;AAC9B,kBAAA,aAAa,mBAAY,KAAZ;AADiB,iBAAhC;AAGA,gBAAA,QAAQ,CAAC,SAAD,CAAR;AARyC;AAAA,uBAU7B,QAAQ,CAAC,aAAD,EAAgB,EAAhB,EAAoB;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAApB,CAVqB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWvC,gBAAA,MAAM,CAAC,mBAAD,EAAsB,CAC1B;AACE,kBAAA,IAAI,EAAE;AADR,iBAD0B,EAI1B;AACE,kBAAA,IAAI,EAAE;AADR,iBAJ0B,CAAtB,EAOH;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAPG,CAAN;;AAXuC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBzC,gBAAA,OAAO,CAAC,KAAR,CAAc,uBAAd;AArByC,kDAsBlC,KAtBkC;;AAAA;AAAA;AAAA;;AAAA;AAyB3C,gBAAA,MAAM,CAAC,mBAAD,EAAsB,CAC1B;AACE,kBAAA,IAAI,EAAE;AADR,iBAD0B,CAAtB,EAIH;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAJG,CAAN;;AAzB2C;AAAA,kDA+BtC,KA/BsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgC9C,KA9CM;AAgDD,IAAA,MAhDC,yBAgDgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR,gBAAA,MAAQ,SAAR,MAAQ;AACrB,gBAAA,MAAM,CAAC,OAAD,CAAN;AACA,gBAAA,MAAM,CAAC,aAAD,EAAgB,EAAhB,EAAoB;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAApB,CAAN;AACA,gBAAA,MAAM,CAAC,UAAD,EAAa,EAAb,CAAN;AACA,gBAAA,MAAM,CAAC,WAAD,EAAc,KAAd,CAAN;AACA,gBAAA,MAAM,CAAC,SAAD,EAAY,EAAZ,CAAN;AACA,gBAAA,MAAM,CAAC,mBAAD,EAAsB,CAC1B;AACE,kBAAA,IAAI,EAAE;AADR,iBAD0B,CAAtB,EAIH;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAJG,CAAN;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWtB,KA3DM;AA4DD,IAAA,YA5DC,+BA4DkC,KA5DlC,EA4DuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB,gBAAA,MAAyB,SAAzB,MAAyB,EAAjB,QAAiB,SAAjB,QAAiB;AAAA;AAE1C,gBAAA,MAAM,CAAC,UAAD,EAAa,KAAb,CAAN;AAF0C;AAAA,uBAGpC,QAAQ,CAAC,SAAD,CAH4B;;AAAA;AAAA;AAAA,uBAIrB,QAAQ,CAAC,aAAD,EAAgB,EAAhB,EAAoB;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAApB,CAJa;;AAAA;AAIpC,gBAAA,MAJoC;AAAA,kDAKnC,MALmC;;AAAA;AAAA;AAAA;AAQ1C,gBAAA,OAAO,CAAC,GAAR;AAR0C,kDASnC,KATmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW7C,KAvEM;AAwED,IAAA,MAxEC,gCAwE+C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAvC,gBAAA,MAAuC,SAAvC,MAAuC,EAA/B,QAA+B,SAA/B,QAA+B;AAAjB,gBAAA,KAAiB,SAAjB,KAAiB,EAAV,QAAU,SAAV,QAAU;AACpD,gBAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AADoD;AAAA;AAAA,uBAI3B,KAAK,CAAC,IAAN,WAAc,OAAO,CAAC,GAAR,CAAY,gBAA1B,cAAqD;AAC1E,kBAAA,KAAK,EAAL,KAD0E;AAE1E,kBAAA,QAAQ,EAAR;AAF0E,iBAArD,CAJ2B;;AAAA;AAAA;AAI1C,gBAAA,IAJ0C,qBAI1C,IAJ0C;AASlD,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,KAAjB;AACA,gBAAA,MAAM,CAAC,UAAD,EAAa,IAAI,CAAC,KAAlB,CAAN;AAVkD;AAAA,uBAW5C,QAAQ,CAAC,SAAD,CAXoC;;AAAA;AAAA;AAAA,uBAY7B,QAAQ,CAAC,aAAD,EAAgB,EAAhB,EAAoB;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAApB,CAZqB;;AAAA;AAY5C,gBAAA,MAZ4C;AAAA,kDAa3C,MAb2C;;AAAA;AAAA;AAAA;AAelD,gBAAA,OAAO,CAAC,GAAR;AAfkD,kDAgB3C,KAhB2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBrD,KA1FM;AA2FD,IAAA,MA3FC,gCA2F+C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAvC,gBAAA,MAAuC,SAAvC,MAAuC,EAA/B,QAA+B,SAA/B,QAA+B;AAAjB,gBAAA,KAAiB,SAAjB,KAAiB,EAAV,QAAU,SAAV,QAAU;AACpD,gBAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AADoD;AAAA;AAAA,uBAI3B,KAAK,CAAC,IAAN,WAAc,OAAO,CAAC,GAAR,CAAY,gBAA1B,cAAqD;AAC1E,kBAAA,KAAK,EAAL,KAD0E;AAE1E,kBAAA,QAAQ,EAAR;AAF0E,iBAArD,CAJ2B;;AAAA;AAAA;AAI1C,gBAAA,IAJ0C,sBAI1C,IAJ0C;AASlD,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,gBAAA,MAAM,CAAC,UAAD,EAAa,IAAI,CAAC,KAAlB,CAAN;AAVkD;AAAA,uBAW5C,QAAQ,CAAC,SAAD,CAXoC;;AAAA;AAYlD,gBAAA,QAAQ,CAAC,qBAAD,EAAwB,EAAxB,EAA4B;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAA5B,CAAR;AAZkD,kDAa3C,IAb2C;;AAAA;AAAA;AAAA;AAelD,gBAAA,OAAO,CAAC,GAAR;AAfkD,kDAgB3C,KAhB2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBrD;AA7GM;AA9CI,CAAf","sourcesContent":["import Axios from 'axios';\n\nexport default {\n  namespaced: true,\n  state: {\n    user: {},\n    logged: false,\n  },\n\n  mutations: {\n    setToken(_, token) : void {\n      localStorage.setItem('token', JSON.stringify(token));\n      Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n\n    setLogged(state, data) {\n      state.logged = data;\n    },\n\n    setUser(state, data) {\n      state.user = data;\n    },\n\n    setFilters(state, data) {\n      state.user.filters = data;\n    },\n\n    setGenre(state, data) {\n      state.user.genre = data;\n    },\n\n    clear(state) {\n      state.user = {};\n    },\n  },\n\n  getters: {\n    getToken() : string | null {\n      if (localStorage.getItem('token') === 'undefined') {\n        // Si no hay ningún token en cache lo creamos vacío\n        localStorage.setItem('token', JSON.stringify(''));\n        return null;\n      }\n\n      return JSON.parse(localStorage.getItem('token'));\n    },\n  },\n\n  actions: {\n    async getUser({ commit }) {\n      console.log(\"GETTING USER\")\n      try {\n        let {data} = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/getMe`)\n        console.log(data);\n        commit('setUser', data);\n        commit('setLogged', true);\n      }\n      catch(err) {\n        commit('setLogged', false);\n        console.error(err);\n      }\n    },\n    async checkLogged({ commit, getters, dispatch }) {\n      const token = getters.getToken;\n      if (typeof token !== 'undefined') {\n        try {\n          // Hacemos que Axios lo incluya siempre en el header de todas las peticiones\n          Axios.defaults.headers.common = {\n            Authorization: `Bearer ${token}`,\n          };\n          dispatch('getUser');\n          \n          if (!(await dispatch('stack/fetch', {}, { root: true }))) {\n            commit('stack/updateCards', [\n              {\n                type: 'welcome',\n              },\n              {\n                type: 'login',\n              },\n            ], { root: true });\n          }\n        } catch (err) {\n          console.error('La sesión ha caducado', err);\n          return false;\n        }\n      } else {\n        commit('stack/updateCards', [\n          {\n            type: 'login',\n          },\n        ], { root: true });\n      }\n      return false;\n    },\n\n    async logout({ commit }) {\n      commit('clear');\n      commit('stack/clear', {}, { root: true });\n      commit('setToken', '');\n      commit('setLogged', false);\n      commit('setUser', {});\n      commit('stack/updateCards', [\n        {\n          type: 'login',\n        },\n      ], { root: true });\n    },\n    async signinGoogle({ commit, dispatch }, token): Promise<boolean> {\n      try {\n        commit('setToken', token);\n        await dispatch('getUser');\n        const result = await dispatch('stack/fetch', {}, { root: true });\n        return result;\n      }\n      catch(err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signin({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNIN');\n\n      try {\n        const { data } = await Axios.post(`${process.env.VUE_APP_ENDPOINT}/signin`, {\n          email,\n          password,\n        });\n\n        console.log(data.token);\n        commit('setToken', data.token);\n        await dispatch('getUser');\n        const result = await dispatch('stack/fetch', {}, { root: true });\n        return result;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signup({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNUP');\n\n      try {\n        const { data } = await Axios.post(`${process.env.VUE_APP_ENDPOINT}/signup`, {\n          email,\n          password,\n        });\n\n        console.log(data);\n        commit('setToken', data.token);\n        await dispatch('getUser');\n        dispatch('stack/fetchPopulars', {}, { root: true });\n        return true;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n  },\n};\n"],"sourceRoot":""}]}