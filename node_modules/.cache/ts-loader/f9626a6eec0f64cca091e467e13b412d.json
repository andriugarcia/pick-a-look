{"remainingRequest":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js??ref--13-2!/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","dependencies":[{"path":"/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","mtime":1595189899495},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2FuZHJlc2dhcmNpYW1hY2lhcy9Eb2N1bWVudHMvY2xvdGhlc1RpbmRlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBBeGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICB1c2VyOiB7fSwKICAgIGxvZ2dlZDogZmFsc2UKICB9LAogIG11dGF0aW9uczogewogICAgc2V0VG9rZW46IGZ1bmN0aW9uIHNldFRva2VuKF8sIHRva2VuKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIEpTT04uc3RyaW5naWZ5KHRva2VuKSk7CiAgICAgIEF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24gPSAiQmVhcmVyICIuY29uY2F0KHRva2VuKTsKICAgIH0sCiAgICBzZXRMb2dnZWQ6IGZ1bmN0aW9uIHNldExvZ2dlZChzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5sb2dnZWQgPSBkYXRhOwogICAgfSwKICAgIHNldFVzZXI6IGZ1bmN0aW9uIHNldFVzZXIoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudXNlciA9IGRhdGE7CiAgICB9LAogICAgc2V0RmlsdGVyczogZnVuY3Rpb24gc2V0RmlsdGVycyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS51c2VyLmZpbHRlcnMgPSBkYXRhOwogICAgfSwKICAgIHNldEdlbnJlOiBmdW5jdGlvbiBzZXRHZW5yZShzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS51c2VyLmdlbnJlID0gZGF0YTsKICAgIH0sCiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoc3RhdGUpIHsKICAgICAgc3RhdGUudXNlciA9IHt9OwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0VG9rZW46IGZ1bmN0aW9uIGdldFRva2VuKCkgewogICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgLy8gU2kgbm8gaGF5IG5pbmfDum4gdG9rZW4gZW4gY2FjaGUgbG8gY3JlYW1vcyB2YWPDrW8KICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCBKU09OLnN0cmluZ2lmeSgnJykpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CgogICAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBnZXRVc2VyOiBmdW5jdGlvbiBnZXRVc2VyKF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBfeWllbGQkQXhpb3MkZ2V0LCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJHRVRUSU5HIFVTRVIiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIEF4aW9zLmdldCgiIi5jb25jYXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9FTkRQT0lOVCwgIi9nZXRNZSIpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3lpZWxkJEF4aW9zJGdldCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJEF4aW9zJGdldC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldFVzZXInLCBkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNoZWNrTG9nZ2VkOiBmdW5jdGlvbiBjaGVja0xvZ2dlZChfcmVmMikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29tbWl0LCBnZXR0ZXJzLCBkaXNwYXRjaCwgdG9rZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwgZ2V0dGVycyA9IF9yZWYyLmdldHRlcnMsIGRpc3BhdGNoID0gX3JlZjIuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICB0b2tlbiA9IGdldHRlcnMuZ2V0VG9rZW47CgogICAgICAgICAgICAgICAgaWYgKCEodHlwZW9mIHRva2VuICE9PSAndW5kZWZpbmVkJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAzOwogICAgICAgICAgICAgICAgLy8gSGFjZW1vcyBxdWUgQXhpb3MgbG8gaW5jbHV5YSBzaWVtcHJlIGVuIGVsIGhlYWRlciBkZSB0b2RhcyBsYXMgcGV0aWNpb25lcwogICAgICAgICAgICAgICAgQXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb24gPSB7CiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRMb2dnZWQnLCB0cnVlKTsKICAgICAgICAgICAgICAgIGRpc3BhdGNoKCdnZXRVc2VyJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ3N0YWNrL2ZldGNoJywge30sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGlmIChfY29udGV4dDIuc2VudCkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb21taXQoJ3N0YWNrL3VwZGF0ZUNhcmRzJywgW3sKICAgICAgICAgICAgICAgICAgdHlwZTogJ3dlbGNvbWUnCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdsb2dpbicKICAgICAgICAgICAgICAgIH1dLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRMb2dnZWQnLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE4OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignTGEgc2VzacOzbiBoYSBjYWR1Y2FkbycsIF9jb250ZXh0Mi50MCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgICAgY29tbWl0KCdzdGFjay91cGRhdGVDYXJkcycsIFt7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdsb2dpbicKICAgICAgICAgICAgICAgIH1dLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1szLCAxNF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjMpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgY29tbWl0KCdjbGVhcicpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzdGFjay9jbGVhcicsIHt9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRUb2tlbicsICcnKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0TG9nZ2VkJywgZmFsc2UpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzdGFjay91cGRhdGVDYXJkcycsIFt7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdsb2dpbicKICAgICAgICAgICAgICAgIH1dLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzaWduaW5Hb29nbGU6IGZ1bmN0aW9uIHNpZ25pbkdvb2dsZShfcmVmNCwgdG9rZW4pIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY0LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRUb2tlbicsIHRva2VuKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnZ2V0VXNlcicpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ3N0YWNrL2ZldGNoJywge30sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRMb2dnZWQnLCByZXN1bHQpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHJlc3VsdCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDEyOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ0LnQwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMSwgMTJdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNpZ25pbjogZnVuY3Rpb24gc2lnbmluKF9yZWY1LCBfcmVmNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgZW1haWwsIHBhc3N3b3JkLCBfeWllbGQkQXhpb3MkcG9zdCwgZGF0YSwgcmVzdWx0OwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY1LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgZW1haWwgPSBfcmVmNi5lbWFpbCwgcGFzc3dvcmQgPSBfcmVmNi5wYXNzd29yZDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTSUdOSU4nKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMzsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBBeGlvcy5wb3N0KCIiLmNvbmNhdChwcm9jZXNzLmVudi5WVUVfQVBQX0VORFBPSU5ULCAiL3NpZ25pbiIpLCB7CiAgICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3lpZWxkJEF4aW9zJHBvc3QgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkQXhpb3MkcG9zdC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldFRva2VuJywgZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdnZXRVc2VyJyk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdzdGFjay9mZXRjaCcsIHt9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldExvZ2dlZCcsIHJlc3VsdCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgcmVzdWx0KTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMTk7CiAgICAgICAgICAgICAgICBfY29udGV4dDUudDAgPSBfY29udGV4dDVbImNhdGNoIl0oMyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDUudDApOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSwgbnVsbCwgW1szLCAxOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2lnbnVwOiBmdW5jdGlvbiBzaWdudXAoX3JlZjcsIF9yZWY4KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KCkgewogICAgICAgIHZhciBjb21taXQsIGRpc3BhdGNoLCBlbWFpbCwgcGFzc3dvcmQsIF95aWVsZCRBeGlvcyRwb3N0MiwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY3LmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmNy5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGVtYWlsID0gX3JlZjguZW1haWwsIHBhc3N3b3JkID0gX3JlZjgucGFzc3dvcmQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU0lHTlVQJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dDYucHJldiA9IDM7CiAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gQXhpb3MucG9zdCgiIi5jb25jYXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9FTkRQT0lOVCwgIi9zaWdudXAiKSwgewogICAgICAgICAgICAgICAgICBlbWFpbDogZW1haWwsCiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF95aWVsZCRBeGlvcyRwb3N0MiA9IF9jb250ZXh0Ni5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRBeGlvcyRwb3N0Mi5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldFRva2VuJywgZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldExvZ2dlZCcsIHRydWUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnZ2V0VXNlcicpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgZGlzcGF0Y2goJ3N0YWNrL2ZldGNoUG9wdWxhcnMnLCB7fSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMTc7CiAgICAgICAgICAgICAgICBfY29udGV4dDYudDAgPSBfY29udGV4dDZbImNhdGNoIl0oMyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDYudDApOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNiwgbnVsbCwgW1szLCAxN11dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import Axios from 'axios';\n\nexport default {\n  namespaced: true,\n  state: {\n    user: {},\n    logged: false,\n  },\n\n  mutations: {\n    setToken(_, token) : void {\n      localStorage.setItem('token', JSON.stringify(token));\n      Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n\n    setLogged(state, data) {\n      state.logged = data;\n    },\n\n    setUser(state, data) {\n      state.user = data;\n    },\n\n    setFilters(state, data) {\n      state.user.filters = data;\n    },\n\n    setGenre(state, data) {\n      state.user.genre = data;\n    },\n\n    clear(state) {\n      state.user = {};\n    },\n  },\n\n  getters: {\n    getToken() : string | null {\n      if (localStorage.getItem('token') === 'undefined') {\n        // Si no hay ningún token en cache lo creamos vacío\n        localStorage.setItem('token', JSON.stringify(''));\n        return null;\n      }\n\n      return JSON.parse(localStorage.getItem('token'));\n    },\n  },\n\n  actions: {\n    async getUser({ commit }) {\n      console.log(\"GETTING USER\")\n      let {data} = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/getMe`)\n      console.log(data);\n      commit('setUser', data);\n    },\n    async checkLogged({ commit, getters, dispatch }) {\n      const token = getters.getToken;\n      if (typeof token !== 'undefined') {\n        try {\n          // Hacemos que Axios lo incluya siempre en el header de todas las peticiones\n          Axios.defaults.headers.common = {\n            Authorization: `Bearer ${token}`,\n          };\n          commit('setLogged', true);\n          dispatch('getUser');\n          if (!(await dispatch('stack/fetch', {}, { root: true }))) {\n            commit('stack/updateCards', [\n              {\n                type: 'welcome',\n              },\n              {\n                type: 'login',\n              },\n            ], { root: true });\n            commit('setLogged', false);\n          }\n        } catch (err) {\n          console.error('La sesión ha caducado', err);\n          return false;\n        }\n      } else {\n        commit('stack/updateCards', [\n          {\n            type: 'login',\n          },\n        ], { root: true });\n      }\n      return false;\n    },\n\n    async logout({ commit }) {\n      commit('clear');\n      commit('stack/clear', {}, { root: true });\n      commit('setToken', '');\n      commit('setLogged', false);\n      commit('stack/updateCards', [\n        {\n          type: 'login',\n        },\n      ], { root: true });\n    },\n    async signinGoogle({ commit, dispatch }, token): Promise<boolean> {\n      try {\n        commit('setToken', token);\n        await dispatch('getUser');\n        const result = await dispatch('stack/fetch', {}, { root: true });\n        commit('setLogged', result);\n        return result;\n      }\n      catch(err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signin({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNIN');\n\n      try {\n        const { data } = await Axios.post(`${process.env.VUE_APP_ENDPOINT}/signin`, {\n          email,\n          password,\n        });\n\n        console.log(data);\n        commit('setToken', data.token);\n        await dispatch('getUser');\n        const result = await dispatch('stack/fetch', {}, { root: true });\n        commit('setLogged', result);\n        return result;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signup({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNUP');\n\n      try {\n        const { data } = await Axios.post(`${process.env.VUE_APP_ENDPOINT}/signup`, {\n          email,\n          password,\n        });\n\n        console.log(data);\n        commit('setToken', data.token);\n        commit('setLogged', true);\n        await dispatch('getUser');\n        dispatch('stack/fetchPopulars', {}, { root: true });\n        return true;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n  },\n};\n"],"sourceRoot":""}]}