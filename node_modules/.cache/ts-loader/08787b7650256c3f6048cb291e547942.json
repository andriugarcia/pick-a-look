{"remainingRequest":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js??ref--13-2!/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","dependencies":[{"path":"/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","mtime":1593349871626},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import Axios from 'axios';\n\nexport default {\n  namespaced: true,\n  state: {\n    user: {},\n    logged: false,\n  },\n\n  mutations: {\n    setToken(_, token) : void {\n      localStorage.setItem('token', JSON.stringify(token));\n      Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n\n    setLogged(state, data) {\n      state.logged = data;\n    },\n\n    clear(state) {\n      state.user = {};\n    },\n  },\n\n  getters: {\n    getToken() : string | null {\n      if (localStorage.getItem('token') === 'undefined') {\n        // Si no hay ningún token en cache lo creamos vacío\n        localStorage.setItem('token', JSON.stringify(''));\n        return null;\n      }\n\n      return JSON.parse(localStorage.getItem('token'));\n    },\n  },\n\n  actions: {\n    async checkLogged({ commit, getters, dispatch }) {\n      const token = getters.getToken;\n      if (typeof token !== 'undefined') {\n        try {\n          // Hacemos que Axios lo incluya siempre en el header de todas las peticiones\n          Axios.defaults.headers.common = {\n            Authorization: `Bearer ${token}`,\n          };\n          commit('setLogged', true);\n\n          if (!(await dispatch('stack/fetch', {}, { root: true }))) {\n            commit('stack/updateCards', [\n              // {\n              //   type: 'welcome',\n              // },\n              {\n                type: 'login',\n              },\n            ], { root: true });\n            commit('setLogged', false);\n          }\n        } catch (err) {\n          console.error('La sesión ha caducado', err);\n          return false;\n        }\n      } else {\n        commit('stack/updateCards', [\n          {\n            type: 'login',\n          },\n        ], { root: true });\n      }\n      return false;\n    },\n\n    async logout({ commit }) {\n      commit('clear');\n      commit('stack/clear', {}, { root: true });\n      commit('setToken', '');\n      commit('stack/updateCards', [\n        {\n          type: 'login',\n        },\n      ], { root: true });\n    },\n    async signin({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNIN');\n\n      try {\n        const { data } = await Axios.post('http://localhost:3010/signin', {\n          email,\n          password,\n        });\n\n        console.log(data);\n        commit('setToken', data.token);\n        const result = await dispatch('stack/fetch', {}, { root: true });\n        commit('setLogged', result);\n        return result;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signup({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNUP');\n\n      try {\n        const { data } = await Axios.post('http://localhost:3010/signup', {\n          email,\n          password,\n        });\n\n        console.log(data);\n        commit('setToken', data.token);\n        commit('setLogged', true);\n        dispatch('stack/fetchPopulars', {}, { root: true });\n        return true;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n  },\n};\n"],"sourceRoot":""}]}