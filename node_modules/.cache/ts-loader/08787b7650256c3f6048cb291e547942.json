{"remainingRequest":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js!/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js??ref--13-2!/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","dependencies":[{"path":"/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts","mtime":1595005366086},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andresgarciamacias/Documents/clothesTinder/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/andresgarciamacias/Documents/clothesTinder/src/store/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import Axios from 'axios';\n\nexport default {\n  namespaced: true,\n  state: {\n    user: {},\n    logged: false,\n  },\n\n  mutations: {\n    setToken(_, token) : void {\n      localStorage.setItem('token', JSON.stringify(token));\n      Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n\n    setLogged(state, data) {\n      state.logged = data;\n    },\n\n    setUser(state, data) {\n      state.user = data;\n    },\n\n    setFilters(state, data) {\n      state.user.filters = data;\n    },\n\n    clear(state) {\n      state.user = {};\n    },\n  },\n\n  getters: {\n    getToken() : string | null {\n      if (localStorage.getItem('token') === 'undefined') {\n        // Si no hay ningún token en cache lo creamos vacío\n        localStorage.setItem('token', JSON.stringify(''));\n        return null;\n      }\n\n      return JSON.parse(localStorage.getItem('token'));\n    },\n  },\n\n  actions: {\n    async getUser({ commit }) {\n      console.log(\"GETTING USER\")\n      let {data} = await Axios.get(`${process.env.VUE_APP_ENDPOINT}/getMe`)\n      console.log(data);\n      commit('setUser', data);\n    },\n    async checkLogged({ commit, getters, dispatch }) {\n      const token = getters.getToken;\n      if (typeof token !== 'undefined') {\n        try {\n          // Hacemos que Axios lo incluya siempre en el header de todas las peticiones\n          Axios.defaults.headers.common = {\n            Authorization: `Bearer ${token}`,\n          };\n          commit('setLogged', true);\n          dispatch('getUser');\n          if (!(await dispatch('stack/fetch', {}, { root: true }))) {\n            commit('stack/updateCards', [\n              {\n                type: 'welcome',\n              },\n              {\n                type: 'login',\n              },\n            ], { root: true });\n            commit('setLogged', false);\n          }\n        } catch (err) {\n          console.error('La sesión ha caducado', err);\n          return false;\n        }\n      } else {\n        commit('stack/updateCards', [\n          {\n            type: 'login',\n          },\n        ], { root: true });\n      }\n      return false;\n    },\n\n    async logout({ commit }) {\n      commit('clear');\n      commit('stack/clear', {}, { root: true });\n      commit('setToken', '');\n      commit('setLogout', false);\n      commit('stack/updateCards', [\n        {\n          type: 'login',\n        },\n      ], { root: true });\n    },\n    async signin({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNIN');\n\n      try {\n        const { data } = await Axios.post(`${process.env.VUE_APP_ENDPOINT}/signin`, {\n          email,\n          password,\n        });\n\n        console.log(data);\n        commit('setToken', data.token);\n        await dispatch('getUser');\n        const result = await dispatch('stack/fetch', {}, { root: true });\n        commit('setLogged', result);\n        return result;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n    async signup({ commit, dispatch }, { email, password }) : Promise<boolean> {\n      console.log('SIGNUP');\n\n      try {\n        const { data } = await Axios.post('${process.env.VUE_APP_ENDPOINT}/signup', {\n          email,\n          password,\n        });\n\n        console.log(data);\n        commit('setToken', data.token);\n        commit('setLogged', true);\n        await dispatch('getUser');\n        dispatch('stack/fetchPopulars', {}, { root: true });\n        return true;\n      } catch (err) {\n        console.log(err);\n        return false;\n      }\n    },\n  },\n};\n"],"sourceRoot":""}]}